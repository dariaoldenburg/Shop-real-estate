{"version":3,"sources":["angular-ui-switch.min.js","app.js","directives/FileUploaderDirective.js","controllers/AddDetailsController.js","controllers/AddEstateController.js","controllers/AppController.js","controllers/ChangePasswordController.js","controllers/EditEstateController.js","controllers/EstatesController.js","controllers/HeaderController.js","controllers/LoginController.js","controllers/MessagesController.js","controllers/RegisterController.js","controllers/ReportController.js","controllers/UsersController.js","services/AlertService.js","services/AuthService.js","services/EstatesService.js","services/FilterService.js","services/MessagesService.js","services/ReportService.js","services/UsersService.js"],"names":[],"mappingsvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"../all.min.js","sourcesContent":["angular.module(\"uiSwitch\",[]).directive(\"switch\",function(){return{restrict:\"AE\",replace:!0,transclude:!0,template:function(n,e){var s=\"\";return s+=\"<span\",s+=' class=\"switch'+(e.class?\" \"+e.class:\"\")+'\"',s+=e.ngModel?' ng-click=\"'+e.disabled+\" ? \"+e.ngModel+\" : \"+e.ngModel+\"=!\"+e.ngModel+(e.ngChange?\"; \"+e.ngChange+'()\"':'\"'):\"\",s+=' ng-class=\"{ checked:'+e.ngModel+\", disabled:\"+e.disabled+' }\"',s+=\">\",s+=\"<small></small>\",s+='<input type=\"checkbox\"',s+=e.id?' id=\"'+e.id+'\"':\"\",s+=e.name?' name=\"'+e.name+'\"':\"\",s+=e.ngModel?' ng-model=\"'+e.ngModel+'\"':\"\",s+=' style=\"display:none\" />',s+='<span class=\"switch-text\">',s+=e.on?'<span class=\"on\">'+e.on+\"</span>\":\"\",s+=e.off?'<span class=\"off\">'+e.off+\"</span>\":\" \",s+=\"</span>\"}}});","angular.module(\"application\", ['ui.router', 'satellizer', 'ngAlertify', 'uiSwitch'])\n    .config([\n        '$interpolateProvider',\n        '$stateProvider',\n        '$urlRouterProvider',\n        '$authProvider',\n        '$httpProvider',\n        function (\n            $interpolateProvider,\n            $stateProvider,\n            $urlRouterProvider,\n            $authProvider,\n            $httpProvider\n        ) {\n\n            $interpolateProvider.startSymbol('[[');\n            $interpolateProvider.endSymbol(']]');\n\n            function checkAuth($state, $window, $rootScope) {\n                var token = $window.localStorage.getItem('satellizer_token');\n                var loginState= $window.location.origin+'/#!/login';\n                var mainState= $window.location.origin+'/#!/';\n                var remindPasswordState= $window.location.origin+'/#!/remindPassword';\n                var resetPasswordState= $window.location.origin+'/#!/resetPassword';\n                var regexResetPasswordState = (resetPasswordState.replace(/\\//g, \"\\\\/\"))+'/.+';\n                var regexResetPassword = new RegExp(regexResetPasswordState,\"g\");\n                var regex = /\\/#!\\/register\\/third\\/.+/g;\n                var currentState = $window.location.href;\n                var user = $window.localStorage.getItem('user');\n                if ((!token || !user) && (currentState != mainState) && (currentState != remindPasswordState) && (!currentState.match(regexResetPassword)) && (!currentState.match(regex))) {\n                    $window.localStorage.removeItem('user');\n                    $rootScope.authenticated = false;\n                    $state.go('nav.login');\n                } else if(token && user && (currentState === loginState || currentState === mainState)){\n                    $state.go('nav.main');\n                } else if(user && (currentState === mainState || currentState === remindPasswordState) && !token) {\n                  $window.localStorage.removeItem('user');\n                  $rootScope.authenticated = false;\n                }\n                return true;\n            }\n\n            $authProvider.loginUrl = '/api/authenticate';\n\n            $urlRouterProvider.otherwise('/estates');\n\n            $stateProvider\n              .state('nav', {\n                abstract: true,\n                templateUrl: 'views/nav.html'\n              })\n              .state('register',{\n                controller: 'RegisterController',\n                url: '/register',\n                templateUrl: 'views/register.html'\n              })\n              .state('login',{\n                controller: 'LoginController',\n                url: '/login',\n                templateUrl: 'views/login.html'\n              })\n              .state('nav.add-estate',{\n                url: '/add-estate',\n                views: {\n                  '': {\n                    templateUrl: 'views/addEstate.html',\n                    controller: 'addEstateController'\n                  }\n                }\n              })\n              .state('nav.edit-estate',{\n                url: '/edit-estate/{id}',\n                views: {\n                  '': {\n                    templateUrl: 'views/editEstate.html',\n                    controller: 'editEstateController'\n                  }\n                }\n              })\n              .state('nav.estates',{\n                url: '/estates',\n                views: {\n                  '': {\n                    controller: 'EstatesController',\n                    templateUrl: 'views/estates.html'\n                  }\n                }\n              })\n              .state('nav.messages',{\n                url: '/messages',\n                views: {\n                  '': {\n                    controller: 'MessagesController',\n                    templateUrl: 'views/messages.html'\n                  }\n                }\n              })\n              .state('nav.users',{\n                url: '/users',\n                views: {\n                  '': {\n                    controller: 'UsersController',\n                    templateUrl: 'views/users.html'\n                  }\n                },\n                //check czy user jest adminem\n                // resolve: {\n                  // notificationsList: function(NotificationService, $rootScope, $stateParams) {\n                  //   // if($window.localStorage.getItem('satellizer_token')) {\n                  //   return NotificationService.getNotifications($stateParams.pageId).then(function (result) {\n                  //     return result.data.notifications;\n                  //   });\n                    // }\n                  // }\n                // }\n              })\n              .state('nav.changePassword',{\n                url: '/changePassword/{id}',\n                views: {\n                  '': {\n                    controller: 'ChangePasswordController',\n                    templateUrl: 'views/changePassword.html'\n                  }\n                }\n              })\n              .state('nav.report',{\n                url: '/report/{month}/{year}',\n                views: {\n                  '': {\n                    controller: 'ReportController',\n                    templateUrl: 'views/report.html'\n                  }\n                }\n              });\n\n            $httpProvider.defaults.useXDomain = true;\n            delete $httpProvider.defaults.headers.common[\"X-Requeste    d-With\"];\n            $httpProvider.defaults.headers.common[\"Accept\"] = \"application/json\";\n            $httpProvider.defaults.headers.common[\"Content-Type\"] = \"application/json\";\n            $httpProvider.interceptors.push(['$q', 'alertify', '$rootScope', '$state', 'AlertService', function ($q, alertify, $rootScope, $state, AlertService) {\n                return {\n                    'responseError': function (response) {\n                        if(response.status === 400) {\n                            if(response.data.error == 'token_not_provided'){\n                                // $auth.logout().then(function () {\n                                    localStorage.removeItem('satellizer_token');\n                                    localStorage.removeItem('user');\n                                    $rootScope.authenticated = false;\n                                    $rootScope.currentUser = null;\n                                    response.data.error = 'Zaloguj się ponownie';\n                                    $state.go('login');\n                                // });\n\n                                // AuthService.logout();\n                                // $http.defaults.headers.common.Authorization = '';\n                                // $state.go('nav.login');\n                            }\n                            AlertService.showMessage(response.data);\n                        }\n                        if(response.status === 401) {\n                            if(response.data.error == 'invalid_credentials'){\n                                var msg = {\n                                    error: 'Podano błędny email lub hasło'\n                                };\n                                AlertService.showMessage(msg);\n                                $state.go('nav.login');\n                            }\n                            console.error(\"Brak autoryzacji\");\n                            $state.go('nav.login');\n                        }\n\n                        return $q.reject(response);\n                    },\n\n                    response: function (response) {\n                        if(response.status === 200 && typeof response.data.success !== 'undefined') {\n                            AlertService.messageSuccess(response.data);\n                        }\n                        return response;\n                    }\n\n\n                };\n            }]);\n\n\n        }\n    ]);","(function () {\n  'use strict';\n\n  angular\n    .module('application')\n    .directive(\"fileUploader\", ['$rootScope', 'EstatesService', function ($rootScope, EstatesService) {\n      return {\n        scope: false,\n        link: function (scope, element) {\n          element.bind('change', function (evt) {\n            scope.$apply(function () {\n              if (evt.target.files.length === 0) {\n                return;\n              }\n              EstatesService.sendPhoto(evt.target.files[0])\n                .then(function (response) {\n                  response = response.data;\n                  if (response.success) {\n                    EstatesService.loadCurrentPhoto(response.url);\n                    $rootScope.$broadcast(EstatesService.status.PHOTO_UPLOADED);\n                  }\n                });\n            });\n          });\n        }\n      }\n    }]);\n})();","(function() {\n    'use strict';\n\n    angular\n        .module('application')\n        .controller('AddDetailsController', AddDetailsController);\n\n    function AddDetailsController($scope, $state, PageService, AddPageService, $rootScope) {\n        $scope.status = false;\n\n        $scope.addPage = AddPageService.status.addPage;\n        $scope.addPageStep = 1;\n        $rootScope.$broadcast('addPageStep', {\n            addPageStep: $scope.addPageStep\n        });\n\n        $scope.prooflyBranding = 1;\n\n        $scope.addPage = function () {\n            PageService.addPage({\n                name: $scope.namePage,\n                url: $scope.url,\n                utm_source: $scope.utmSource,\n                utm_medium: $scope.utmMedium,\n                proofly_branding: $scope.prooflyBranding,\n                verification: $scope.verification\n            })\n                .then(function(result) {\n                    AddPageService.setStep($scope.addPageStep);\n                    $rootScope.$broadcast('addPageStep', {\n                        addPageStep: AddPageService.status.addPageStep\n                    });\n                    $state.go('nav.addPage.installation', {\n                        pageId: result.data.page.id\n                    });\n                });\n        };\n\n    }\n}());","(function() {\n  'use strict';\n\n  angular\n    .module('application')\n    .controller('addEstateController', AddEstateController);\n\n  function AddEstateController($scope, EstatesService, AuthService, $state) {\n    $scope.city = '';\n    $scope.street = '';\n    $scope.price = '';\n    $scope.rooms = '';\n    $scope.surface = '';\n    $scope.floor = '';\n    $scope.balcony = false;\n    $scope.description = '';\n    $scope.photoUploaded = false;\n\n    $scope.buttonEnabled = false;\n\n    $scope.$watch('[city ,street, price, rooms, surface, floor, balcony, description]', function () {\n      $scope.buttonEnabled =\n        $scope.city\n        && $scope.street\n        && $scope.price\n        && $scope.rooms\n        && $scope.surface\n        && $scope.floor\n        && $scope.description\n    }, true);\n\n    $scope.addEstate = function () {\n      EstatesService.addEstate({\n        city: $scope.city,\n        street: $scope.street,\n        price: $scope.price,\n        rooms: $scope.rooms,\n        surface: $scope.surface,\n        floor: $scope.floor,\n        balcony: $scope.balcony,\n        description: $scope.description,\n        userID: AuthService.userID,\n      })\n        .then(function (response) {\n          if ( response.data.success ) {\n            $state.go('estates');\n          }\n        })\n    }\n  }\n}());","(function() {\n    'use strict';\n\n    angular\n        .module('application')\n        .controller('AppController', AppController);\n\n    function AppController($window, $rootScope) {\n\n        if ($window.localStorage.getItem('user')) {\n            var user = $window.localStorage.getItem('user');\n            $rootScope.authenticated = true;\n            $rootScope.currentUser = JSON.parse(user);\n        }\n    }\n}());","(function() {\n  'use strict';\n\n  angular\n    .module('application')\n    .controller('UsersController', ChangePasswordController);\n\n  function ChangePasswordController($scope, $stateParams, UsersService) {\n\n    $scope.idUser = $stateParams.id;\n\n    $scope.changePassword = function () {\n      UsersService.updatePassword($scope.idUser, $scope.password);\n    };\n\n\n  }\n}());","(function() {\n  'use strict';\n\n  angular\n    .module('application')\n    .controller('editEstateController', EditEstateController);\n\n  function EditEstateController($scope, EstatesService, $state, $stateParams, $rootScope) {\n    $scope.city = '';\n    $scope.street = '';\n    $scope.price = '';\n    $scope.rooms = '';\n    $scope.surface = '';\n    $scope.floor = '';\n    $scope.balcony = false;\n    $scope.description = '';\n    $scope.id = '';\n\n    $scope.buttonEnabled = false;\n\n    EstatesService.fetchEstateById($stateParams.id)\n      .then(function (response) {\n        var estateData = response.data.offer;\n        $scope.id = estateData.id;\n        $scope.city = estateData.city;\n        $scope.street = estateData.street;\n        $scope.price = estateData.price;\n        $scope.rooms = estateData.no_rooms;\n        $scope.surface = estateData.apartment_area;\n        $scope.floor = estateData.floors;\n        $scope.balcony = estateData.balcony;\n        $scope.description = estateData.description;\n      });\n\n    $scope.$watch('[city ,street, price, rooms, surface, floor, balcony, description]', function () {\n      $scope.buttonEnabled =\n        $scope.city\n        && $scope.street\n        && $scope.price\n        && $scope.rooms\n        && $scope.surface\n        && $scope.floor\n        && $scope.description\n    }, true);\n\n    $scope.updateEstate = function () {\n      if ( $scope.images !== '' ) {\n        $scope.newImage = $scope.images;\n      }\n      EstatesService.updateEstate({\n        id: $scope.id,\n        city: $scope.city,\n        street: $scope.street,\n        price: $scope.price,\n        rooms: $scope.rooms,\n        surface: $scope.surface,\n        floor: $scope.floor,\n        balcony: $scope.balcony,\n        description: $scope.description,\n        userId: $rootScope.currentUser.id\n      })\n        .then(function (response) {\n          if ( response.data.success ) {\n            $state.go('estates');\n          }\n        })\n    }\n  }\n}());","(function() {\n  'use strict';\n\n  angular\n    .module('application')\n    .controller('EstatesController', EstatesController);\n\n  function EstatesController($scope, EstatesService, FilterService, AuthService) {\n    $scope.estates = [];\n    $scope.filteredEstates = [];\n    $scope.filters = Object.assign({}, FilterService.filters);\n\n    EstatesService.fetchAllEstates()\n      .then(function (response) {\n        $scope.estates = response.data.offers || [];\n        $scope.filteredEstates = response.data.offers || [];\n      });\n\n    $scope.setSold = function (offerID) {\n      EstatesService.setSold(offerID);\n    };\n\n    $scope.buy = function (offer) {\n      EstatesService.buy($scope.userId, offer.user_id, offer.id);\n    };\n\n    $scope.remove = function (offerID) {\n      EstatesService.remove(offerID);\n    };\n\n    $scope.updateFilter = function(name) {\n      FilterService.updateFilter(name, $scope.filters[name]);\n    };\n\n    $scope.$on(FilterService.status.FILTERS_UPDATED, function(filters) {\n      $scope.filteredEstates = FilterService.filterList($scope.estates);\n    })\n  }\n}());","(function() {\n  'use strict';\n\n  angular\n    .module('application')\n    .controller('HeaderController', HeaderController);\n\n  function HeaderController($scope, $rootScope) {\n    $scope.usersVisible = $rootScope.currentUser.role === 'admin';\n  }\n}());","(function() {\n  'use strict';\n\n  angular\n    .module('application')\n    .controller('LoginController', LoginController);\n\n  function LoginController($scope, AuthService, $state) {\n    $scope.email = '';\n    $scope.password = '';\n    $scope.buttonEnabled = false;\n\n    $scope.$watch('[email, password]', function () {\n      $scope.buttonEnabled =\n        $scope.email !== ''\n        && $scope.password !== ''\n    }, true);\n\n    $scope.login = function () {\n      AuthService.login($scope.email, $scope.password);\n    }\n  }\n}());","(function() {\n  'use strict';\n\n  angular\n    .module('application')\n    .controller('MessagesController', MessagesController);\n\n  function MessagesController($scope, MessagesService, AuthService) {\n    $scope.messages = [];\n    MessagesService.fetchAllMessages(AuthService.userID)\n      .then(function (response) {\n        $scope.messages = response.data.messages;\n      });\n  }\n}());","(function() {\n  'use strict';\n\n  angular\n    .module('application')\n    .controller('RegisterController', RegisterController);\n\n  function RegisterController($scope, AuthService, $state) {\n    $scope.email = '';\n    $scope.phone = '';\n    $scope.password = '';\n    $scope.passwordAgain = '';\n    $scope.buttonEnabled = true;\n\n    $scope.$watch('[email, phone, password, passwordAgain]', function () {\n      $scope.buttonEnabled =\n        $scope.phone.toString().length < 10\n        && !(\n          $scope.password !== ''\n          && $scope.passwordAgain !== ''\n          && $scope.password !== $scope.passwordAgain\n        )\n    }, true);\n\n    $scope.register = function () {\n      AuthService.register($scope.email, $scope.phone, $scope.password)\n        .then(function (response) {\n          if ( response.data.success ) {\n            $state.go('login');\n          }\n        })\n    }\n  }\n}());","(function() {\n  'use strict';\n\n  angular\n    .module('application')\n    .controller('ReportController', ReportController);\n\n  function ReportController($scope, ReportService, $stateParams) {\n    $scope.offers = [];\n    $scope.apartmentsSold = 0;\n    $scope.avgPrice = 0;\n    $scope.avgSurface = 0;\n    $scope.month = $stateParams.month;\n    $scope.year = $stateParams.year;\n\n    ReportService.getReport($stateParams.month, $stateParams.year)\n      .then(function (response) {\n        $scope.offers = response.data.offers;\n        $scope.apartmentsSold = response.data.offers.length;\n        $scope.avgPrice = 0;\n        response.data.offers.forEach(function(offer) {\n          $scope.avgPrice += offer.price;\n        });\n        $scope.avgPrice /= response.data.offers.length;\n        if ( isNaN($scope.avgPrice) ) {\n          $scope.avgPrice = 0;\n        }\n        $scope.avgSurface = 0;\n        response.data.offers.forEach(function(offer) {\n          $scope.avgSurface += offer.apartment_area;\n        });\n        $scope.avgSurface /= response.data.offers.length;\n        if ( isNaN($scope.avgSurface) ) {\n          $scope.avgSurface = 0;\n        }\n      });\n  }\n}());","(function() {\n  'use strict';\n\n  angular\n    .module('application')\n    .controller('UsersController', UsersController);\n\n  function UsersController($scope, $rootScope, UsersService) {\n    $scope.users = [];\n    $scope.month = 1;\n    $scope.year = 2017;\n\n    UsersService.fetchAllUsers($rootScope.currentUser.id)\n      .then(function (response) {\n        $scope.users = response.data.offers || [];\n      });\n\n    $scope.changePassword = function (id, password) {\n      UsersService.updatePassword(id, password);\n    };\n\n    $scope.removeUser = function (id) {\n      UsersService.removeUser(id)\n        .then(function (response) {\n          $scope.users = response.users || [];\n        });\n    }\n  }\n}());","(function() {\n  'use strict';\n\n  angular\n    .module('application')\n    .service('AlertService', AlertService);\n\n  function AlertService(alertify) {\n    var self = this;\n\n    self.showMessage = function (response) {\n      var msgResponse = '';\n      var message = '';\n      if(typeof response.validatorError !== 'undefined') {\n        msgResponse = response.validatorError;\n        Object.keys(msgResponse).forEach(function(key) {\n          message = message + msgResponse[key][0] + \"</br>\";\n        });\n        alertify\n          .maxLogItems(1)\n          .error(message);\n      } else if (typeof response.error !== 'undefined') {\n        msgResponse = response.error;\n        alertify\n          .maxLogItems(1)\n          .error(msgResponse);\n      }\n    };\n\n    self.messageSuccess = function (response) {\n      var msgSuccess = response.success;\n      alertify\n        .maxLogItems(1)\n        .success(msgSuccess);\n    };\n  }\n}());","(function () {\n  'use strict';\n\n  angular\n    .module('application')\n    .service('AuthService', AuthService);\n\n  function AuthService($http, $auth, $window, $rootScope, $state) {\n    var self = this;\n\n    self.register = function (email, number, password) {\n      return $http({\n        method: 'POST',\n        url: '/api/register',\n        data: {\n          email: email,\n          telephone: number,\n          password: password,\n          password_confirmation: password\n        }\n      });\n    };\n\n    self.login = function (email, password) {\n      var credentials = {\n        email: email,\n        password: password\n      };\n\n      $auth.login(credentials).then(function() {\n        return $http.get('api/authenticate/user');\n      }, function(error) {\n        if( error.status === 401 ) {\n          var loginErrorText = 'Podano niewłaściwy mail lub hasło';\n          MessagesService.showMessage('message', loginErrorText);\n        }\n      }).then(function(response) {\n        var user = JSON.stringify(response.data.user);\n        $window.localStorage.setItem('user', user);\n        $rootScope.authenticated = true;\n        $rootScope.currentUser = response.data.user;\n        $state.go('nav.estates');\n      });\n\n    }\n\n  }\n}());","(function() {\n  'use strict';\n\n  angular\n    .module('application')\n    .service('EstatesService', EstatesService);\n\n  function EstatesService($http) {\n    var self = this;\n    self.status = {\n      PHOTO_UPLOADED: 'PHOTO_UPLOADED'\n    };\n    self.currentPhoto = '';\n\n    self.fetchAllEstates = function () {\n      return $http({\n        method: 'GET',\n        url: '/api/offers'\n      });\n    };\n\n    self.fetchEstateById = function (id) {\n      return $http({\n        method: 'GET',\n        url: '/api/offers/' + id\n      });\n    };\n\n    self.sendPhoto = function (photo) {\n      var updateData = new FormData();\n      updateData.append('file', photo);\n\n      return $http({\n        method: 'POST',\n        data: updateData,\n        url: '/api/upload',\n        headers: {'Content-Type': undefined }\n      });\n    };\n\n    self.loadCurrentPhoto = function (url) {\n      console.log(url);\n      self.currentPhoto = url;\n    };\n\n    self.addEstate = function (data) {\n      return $http({\n        method: 'POST',\n        url: '/api/offers',\n        data: {\n          city: data.city || '',\n          street: data.street || '',\n          images: self.currentPhoto,\n          no_rooms: data.rooms || '',\n          apartment_area: data.surface || '',\n          floors: data.floor || '',\n          balcony: data.balcony || false,\n          description: data.description || '',\n          price: data.price || '',\n          user_id: data.userID || '',\n        }\n      });\n    };\n\n    self.updateEstate = function (data) {\n      return $http({\n        method: 'PUT',\n        url: '/api/offers/' + data.id,\n        data: {\n          city: data.city || '',\n          street: data.street || '',\n          images: self.currentPhoto,\n          no_rooms: data.rooms || '',\n          apartment_area: data.surface || '',\n          floors: data.floor || '',\n          balcony: data.balcony || false,\n          description: data.description || '',\n          price: data.price || '',\n          user_id: data.userID,\n        }\n      });\n    };\n\n    self.setSold = function (offerID) {\n      return $http({\n        method: 'PUT',\n        url: '/api/offers/' + offerID + '/status',\n        data: {\n          status: false\n        }\n      });\n    };\n\n    self.unsetSold = function (offerID) {\n      return $http({\n        method: 'PUT',\n        url: '/api/offers/' + offerID + '/status',\n        data: {\n          status: true\n        }\n      });\n    };\n\n    self.buy = function (senderID, recipientID, offerID) {\n      return $http({\n        method: 'post',\n        url: '/api/messages',\n        data: {\n          sender_id: senderID,\n          recipient_id: recipientID,\n          offer_id: offerID\n        }\n      });\n    };\n\n    self.remove = function (offerID) {\n      return $http({\n        method: 'DELETE',\n        url: '/api/offers/' + offerID,\n      });\n    };\n\n  }\n}());","(function() {\n  'use strict';\n\n  angular\n    .module('application')\n    .service('FilterService', FilterService);\n\n  function FilterService($rootScope) {\n    var self = this;\n\n    self.status = {\n      FILTERS_UPDATED: 'FILTERS_UPDATED'\n    };\n\n    self.filters = {\n      floor: null,\n      priceFrom: null,\n      priceTo: null,\n      surfaceFrom: null,\n      surfaceTo: null,\n      roomsFrom: null,\n      roomsTo: null\n    };\n\n    self.updateFilter = function (name, value) {\n      self.filters[name] = value;\n      $rootScope.$broadcast(self.status.FILTERS_UPDATED, self.filters);\n    };\n\n    self.filterList = function (list) {\n      return list.filter(function (item) {\n        var f = self.filters;\n        if ( f.floor && item.floors !== f.floor ) {\n          return false;\n        }\n        if ( f.priceFrom && item.price < f.priceFrom ) {\n          return false;\n        }\n        if ( f.surfaceFrom && item.apartment_area < f.surfaceFrom ) {\n          return false;\n        }\n        if ( f.roomsFrom && item.no_rooms < f.roomsFrom ) {\n          return false;\n        }\n        if ( f.priceTo && item.price > f.priceTo ) {\n          return false;\n        }\n        if ( f.surfaceTo && item.apartment_area > f.surfaceTo ) {\n          return false;\n        }\n        if ( f.roomsTo && item.no_rooms > f.roomsTo ) {\n          return false;\n        }\n        return true;\n      })\n    }\n  }\n}());","(function() {\n  'use strict';\n\n  angular\n    .module('application')\n    .service('MessagesService', MessagesService);\n\n  function MessagesService($http) {\n    var self = this;\n\n    self.fetchAllMessages = function (id) {\n      return $http({\n        method: 'GET',\n        url: '/api/messages/' + id\n      });\n    }\n  }\n}());","(function () {\n  'use strict';\n\n  angular\n    .module('application')\n    .service('ReportService', ReportService);\n\n  function ReportService($http) {\n    var self = this;\n\n    self.getReport = function (month, year) {\n      return $http({\n        method: 'GET',\n        url: '/api/offers/generateReport/' + month + '/' + year\n      });\n    };\n\n  }\n}());","(function () {\n  'use strict';\n\n  angular\n    .module('application')\n    .service('UsersService', UsersService);\n\n  function UsersService($http) {\n    var self = this;\n\n    self.fetchAllUsers = function (id) {\n      return $http({\n        method: 'GET',\n        url: '/api/users/' + id\n      });\n    };\n\n    self.removeUser = function (id) {\n      return $http({\n        method: 'DELETE',\n        url: '/api/users/' + id\n      });\n    };\n\n    self.updatePassword = function (id, password) {\n      return $http({\n        method: 'PUT',\n        url: '/api/users/' + id,\n        data: {\n          password: password\n        }\n      });\n    };\n\n  }\n}());"]}