{"version":3,"sources":["angular-ui-switch.min.js","app.js","controllers/AddDetailsController.js","controllers/AppController.js","controllers/EstatesController.js","controllers/RegisterController.js","directives/FileUploaderDirective.js","services/AuthService.js","services/EstatesService.js"],"names":[],"mappings":"AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"../all.min.js","sourcesContent":["angular.module(\"uiSwitch\",[]).directive(\"switch\",function(){return{restrict:\"AE\",replace:!0,transclude:!0,template:function(n,e){var s=\"\";return s+=\"<span\",s+=' class=\"switch'+(e.class?\" \"+e.class:\"\")+'\"',s+=e.ngModel?' ng-click=\"'+e.disabled+\" ? \"+e.ngModel+\" : \"+e.ngModel+\"=!\"+e.ngModel+(e.ngChange?\"; \"+e.ngChange+'()\"':'\"'):\"\",s+=' ng-class=\"{ checked:'+e.ngModel+\", disabled:\"+e.disabled+' }\"',s+=\">\",s+=\"<small></small>\",s+='<input type=\"checkbox\"',s+=e.id?' id=\"'+e.id+'\"':\"\",s+=e.name?' name=\"'+e.name+'\"':\"\",s+=e.ngModel?' ng-model=\"'+e.ngModel+'\"':\"\",s+=' style=\"display:none\" />',s+='<span class=\"switch-text\">',s+=e.on?'<span class=\"on\">'+e.on+\"</span>\":\"\",s+=e.off?'<span class=\"off\">'+e.off+\"</span>\":\" \",s+=\"</span>\"}}});","angular.module(\"application\", ['ui.router', 'satellizer', 'ngAlertify', 'uiSwitch'])\n    .config([\n        '$interpolateProvider',\n        '$stateProvider',\n        '$urlRouterProvider',\n        '$authProvider',\n        '$httpProvider',\n        function (\n            $interpolateProvider,\n            $stateProvider,\n            $urlRouterProvider,\n            $authProvider,\n            $httpProvider\n        ) {\n\n            $interpolateProvider.startSymbol('[[');\n            $interpolateProvider.endSymbol(']]');\n\n            function checkAuth($state, $window, $rootScope) {\n                var token = $window.localStorage.getItem('satellizer_token');\n                var loginState= $window.location.origin+'/#!/login';\n                var mainState= $window.location.origin+'/#!/';\n                var remindPasswordState= $window.location.origin+'/#!/remindPassword';\n                var resetPasswordState= $window.location.origin+'/#!/resetPassword';\n                var regexResetPasswordState = (resetPasswordState.replace(/\\//g, \"\\\\/\"))+'/.+';\n                var regexResetPassword = new RegExp(regexResetPasswordState,\"g\");\n                var regex = /\\/#!\\/register\\/third\\/.+/g;\n                var currentState = $window.location.href;\n                var user = $window.localStorage.getItem('user');\n                if ((!token || !user) && (currentState != mainState) && (currentState != remindPasswordState) && (!currentState.match(regexResetPassword)) && (!currentState.match(regex))) {\n                    $window.localStorage.removeItem('user');\n                    $rootScope.authenticated = false;\n                    $state.go('nav.login');\n                } else if(token && user && (currentState === loginState || currentState === mainState)){\n                    $state.go('nav.main');\n                } else if(user && (currentState === mainState || currentState === remindPasswordState) && !token) {\n                  $window.localStorage.removeItem('user');\n                  $rootScope.authenticated = false;\n                }\n                return true;\n            }\n\n            $authProvider.loginUrl = '/api/authenticate';\n\n            $urlRouterProvider.otherwise('/');\n\n            $stateProvider\n                .state('register',{\n                    name: 'register',\n                    controller: 'RegisterController',\n                    url: '/register',\n                    templateUrl: 'views/register.html'\n                })\n              .state('login',{\n                name: 'login',\n                controller: 'LoginController',\n                url: '/login',\n                templateUrl: 'views/login.html'\n              })\n              .state('add-estate',{\n                name: 'addEstate',\n                controller: 'addEstateController',\n                url: '/add-estate',\n                templateUrl: 'views/addEstate.html'\n              })\n              .state('edit-estate',{\n                name: 'editEstate',\n                controller: 'editEstateController',\n                url: '/edit-estate',\n                templateUrl: 'views/editEstate.html'\n              })\n              .state('estates',{\n                name: 'estates',\n                controller: 'EstatesController',\n                url: '/estates',\n                templateUrl: 'views/estates.html'\n              })\n              .state('messages',{\n                name: 'messages',\n                controller: 'MessagesController',\n                url: '/messages',\n                templateUrl: 'views/messages.html'\n              })\n              .state('users',{\n                name: 'users',\n                controller: 'UsersController',\n                url: '/users',\n                templateUrl: 'views/users.html'\n              })\n              .state('report',{\n                name: 'report',\n                controller: 'ReportController',\n                url: '/report',\n                templateUrl: 'views/report.html'\n              });\n\n            $httpProvider.defaults.useXDomain = true;\n            delete $httpProvider.defaults.headers.common[\"X-Requeste    d-With\"];\n            $httpProvider.defaults.headers.common[\"Accept\"] = \"application/json\";\n            $httpProvider.defaults.headers.common[\"Content-Type\"] = \"application/json\";\n            $httpProvider.interceptors.push(['$q', 'alertify', '$rootScope', '$state', function ($q, alertify, $rootScope, $state) {\n                return {\n                    'responseError': function (response) {\n                        if(response.status === 400) {\n                            if(response.data.error == 'token_not_provided'){\n                                // $auth.logout().then(function () {\n                                    localStorage.removeItem('satellizer_token');\n                                    localStorage.removeItem('user');\n                                    $rootScope.authenticated = false;\n                                    $rootScope.currentUser = null;\n                                    response.data.error = 'Zaloguj się ponownie';\n                                    $state.go('nav.login');\n                                // });\n\n                                // AuthService.logout();\n                                // $http.defaults.headers.common.Authorization = '';\n                                // $state.go('nav.login');\n                            }\n                            // MessagesService.showMessage(response.data);\n                        }\n                        if(response.status === 401) {\n                            if(response.data.error == 'invalid_credentials'){\n                                var msg = {\n                                    error: 'Podano błędny email lub hasło'\n                                };\n                                // MessagesService.showMessage(msg);\n                                $state.go('nav.login');\n                            }\n                            console.error(\"Brak autoryzacji\");\n                            $state.go('nav.login');\n                        }\n\n                        return $q.reject(response);\n                    },\n\n                    response: function (response) {\n                        if(response.status === 200 && typeof response.data.success !== 'undefined') {\n                            // MessagesService.messageSuccess(response.data);\n                        }\n                        return response;\n                    }\n\n\n                };\n            }]);\n\n\n        }\n    ]);","(function() {\n    'use strict';\n\n    angular\n        .module('application')\n        .controller('AddDetailsController', AddDetailsController);\n\n    function AddDetailsController($scope, $state, PageService, AddPageService, $rootScope) {\n        $scope.status = false;\n\n        $scope.addPage = AddPageService.status.addPage;\n        $scope.addPageStep = 1;\n        $rootScope.$broadcast('addPageStep', {\n            addPageStep: $scope.addPageStep\n        });\n\n        $scope.prooflyBranding = 1;\n\n        $scope.addPage = function () {\n            PageService.addPage({\n                name: $scope.namePage,\n                url: $scope.url,\n                utm_source: $scope.utmSource,\n                utm_medium: $scope.utmMedium,\n                proofly_branding: $scope.prooflyBranding,\n                verification: $scope.verification\n            })\n                .then(function(result) {\n                    AddPageService.setStep($scope.addPageStep);\n                    $rootScope.$broadcast('addPageStep', {\n                        addPageStep: AddPageService.status.addPageStep\n                    });\n                    $state.go('nav.addPage.installation', {\n                        pageId: result.data.page.id\n                    });\n                });\n        };\n\n    }\n}());","(function() {\n    'use strict';\n\n    angular\n        .module('application')\n        .controller('AppController', AppController);\n\n    function AppController($window, $rootScope) {\n\n        if ($window.localStorage.getItem('user')) {\n            var user = $window.localStorage.getItem('user');\n            $rootScope.authenticated = true;\n            $rootScope.currentUser = JSON.parse(user);\n        }\n    }\n}());","(function() {\n  'use strict';\n\n  angular\n    .module('application')\n    .controller('EstatesController', EstatesController);\n\n  function EstatesController($scope, EstatesService) {\n    $scope.estates = [];\n    $scope.userId = 2;\n\n    EstatesService.fetchAllEstates()\n      .then(function (response) {\n        $scope.estates = response.data.offers || [];\n      });\n\n    $scope.setSold = function (offerID) {\n      console.log(offerID);\n      EstatesService.setSold(offerID);\n    }\n  }\n}());","(function() {\n  'use strict';\n\n  angular\n    .module('application')\n    .controller('RegisterController', RegisterController);\n\n  function RegisterController($scope, AuthService, $rootScope) {\n    $scope.login = '';\n    $scope.phone = null;\n    $scope.password = '';\n    $scope.buttonEnabled = true;\n\n    $rootScope.$watch('login', function (obje) {\n      console.log(obje);\n    });\n\n    $scope.register = function () {\n      console.log('click');\n    }\n  }\n}());","(function () {\n    'use strict';\n\n    angular\n        .module('application')\n        .directive(\"fileUploader\", [ '$rootScope', 'FileUploadService', function ($rootScope, FileUploadService) {\n        return {\n            scope: false,\n            link: function (scope, element) {\n                element.bind('change', function (evt) {\n                    scope.$apply(function () {\n                        if ( evt.target.files.length === 0 ) {\n                            return;\n                        }\n                        FileUploadService.uploadFile(evt.target.files[0])\n                            .then(function (response) {\n                                response = response.data;\n                                if ( response.success ) {\n                                    $rootScope.$broadcast('updateNotificationImage', {\n                                        image: response.url\n                                    });\n                                }\n                            });\n                    });\n                });\n            }\n        }\n    } ]);\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('application')\n        .service('AuthService', AuthService);\n\n    function AuthService($http) {\n        var self = this;\n\n        self.remindPassword = function (email) {\n            return $http({\n                method: 'POST',\n                url: 'api/password/email',\n                data: {\n                    email: email\n                }\n            });\n        };\n\n        self.resetPassword = function (credentials) {\n            return $http({\n                method: 'POST',\n                url: 'api/password/reset',\n                data: credentials\n            });\n        };\n\n        self.settingsAccount = function (data) {\n            return $http({\n                method: 'POST',\n                url: 'api/user/settingsAccount',\n                data: data\n            });\n        };\n\n    }\n}());","(function() {\n  'use strict';\n\n  angular\n    .module('application')\n    .service('EstatesService', EstatesService);\n\n  function EstatesService($http) {\n    var self = this;\n\n    self.fetchAllEstates = function () {\n      return $http({\n        method: 'GET',\n        url: '/api/offers'\n      });\n    };\n\n    self.setSold = function (offerID) {\n      return $http({\n        method: 'PUT',\n        url: '/api/offers/' + offerID + '/status',\n        data: {\n          status: false\n        }\n      });\n    };\n\n    self.unsetSold = function (offerID) {\n      return $http({\n        method: 'PUT',\n        url: '/api/offers/' + offerID + '/status',\n        data: {\n          status: true\n        }\n      });\n    };\n\n  }\n}());"]}