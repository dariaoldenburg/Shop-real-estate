{"version":3,"sources":["angular-ui-switch.min.js","app.js","directives/FileUploaderDirective.js","controllers/AddDetailsController.js","controllers/AddNotificationController.js","controllers/AddPageController.js","controllers/AppController.js","controllers/AuthenticationController.js","controllers/DetailsController.js","controllers/EditNotificationController.js","controllers/InstallationController.js","controllers/MainController.js","controllers/NavController.js","controllers/NotificationsController.js","controllers/PageSettingsController.js","controllers/ProfileController.js","controllers/RegisterController.js","controllers/RemindPasswordController.js","controllers/ResetPasswordController.js","controllers/SettingsController.js","controllers/UserController.js","controllers/WelcomeController.js","services/AddPageService.js","services/AuthService.js","services/FileUploadService.js","services/GoalService.js","services/MessagesService.js","services/NotificationService.js","services/PageService.js","services/RegisterService.js","services/SettingService.js"],"names":[],"mappingspJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvhLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"../all.min.js","sourcesContent":["angular.module(\"uiSwitch\",[]).directive(\"switch\",function(){return{restrict:\"AE\",replace:!0,transclude:!0,template:function(n,e){var s=\"\";return s+=\"<span\",s+=' class=\"switch'+(e.class?\" \"+e.class:\"\")+'\"',s+=e.ngModel?' ng-click=\"'+e.disabled+\" ? \"+e.ngModel+\" : \"+e.ngModel+\"=!\"+e.ngModel+(e.ngChange?\"; \"+e.ngChange+'()\"':'\"'):\"\",s+=' ng-class=\"{ checked:'+e.ngModel+\", disabled:\"+e.disabled+' }\"',s+=\">\",s+=\"<small></small>\",s+='<input type=\"checkbox\"',s+=e.id?' id=\"'+e.id+'\"':\"\",s+=e.name?' name=\"'+e.name+'\"':\"\",s+=e.ngModel?' ng-model=\"'+e.ngModel+'\"':\"\",s+=' style=\"display:none\" />',s+='<span class=\"switch-text\">',s+=e.on?'<span class=\"on\">'+e.on+\"</span>\":\"\",s+=e.off?'<span class=\"off\">'+e.off+\"</span>\":\" \",s+=\"</span>\"}}});","angular.module(\"application\", ['ui.router', 'satellizer', 'ngAlertify', 'uiSwitch'])\n    .config([\n        '$interpolateProvider',\n        '$stateProvider',\n        '$urlRouterProvider',\n        '$authProvider',\n        '$httpProvider',\n        function (\n            $interpolateProvider,\n            $stateProvider,\n            $urlRouterProvider,\n            $authProvider,\n            $httpProvider\n        ) {\n\n            $interpolateProvider.startSymbol('[[');\n            $interpolateProvider.endSymbol(']]');\n\n            function checkAuth($state, $window, $rootScope) {\n                var token = $window.localStorage.getItem('satellizer_token');\n                var loginState= $window.location.origin+'/#!/login';\n                var mainState= $window.location.origin+'/#!/';\n                var remindPasswordState= $window.location.origin+'/#!/remindPassword';\n                var resetPasswordState= $window.location.origin+'/#!/resetPassword';\n                var regexResetPasswordState = (resetPasswordState.replace(/\\//g, \"\\\\/\"))+'/.+';\n                var regexResetPassword = new RegExp(regexResetPasswordState,\"g\");\n                var regex = /\\/#!\\/register\\/third\\/.+/g;\n                var currentState = $window.location.href;\n                var user = $window.localStorage.getItem('user');\n                if ((!token || !user) && (currentState != mainState) && (currentState != remindPasswordState) && (!currentState.match(regexResetPassword)) && (!currentState.match(regex))) {\n                    $window.localStorage.removeItem('user');\n                    $rootScope.authenticated = false;\n                    $state.go('nav.login');\n                } else if(token && user && (currentState === loginState || currentState === mainState)){\n                    $state.go('nav.main');\n                } else if(user && (currentState === mainState || currentState === remindPasswordState) && !token) {\n                  $window.localStorage.removeItem('user');\n                  $rootScope.authenticated = false;\n                }\n                return true;\n            }\n\n            $authProvider.loginUrl = '/api/authenticate';\n\n            $urlRouterProvider.otherwise('/');\n\n            $stateProvider\n                .state('register',{\n                    name: 'register',\n                    controller: 'RegisterController',\n                    url: '/register',\n                    templateUrl: 'views/register.html'\n                })\n              .state('login',{\n                name: 'login',\n                controller: 'LoginController',\n                url: '/login',\n                templateUrl: 'views/login.html'\n              })\n              .state('add-estate',{\n                name: 'addEstate',\n                controller: 'addEstateController',\n                url: '/add-estate',\n                templateUrl: 'views/addEstate.html'\n              })\n              .state('edit-estate',{\n                name: 'editEstate',\n                controller: 'editEstateController',\n                url: '/edit-estate',\n                templateUrl: 'views/editEstate.html'\n              })\n              .state('estates',{\n                name: 'estates',\n                controller: 'EstatesController',\n                url: '/estates',\n                templateUrl: 'views/estates.html'\n              })\n              .state('messages',{\n                name: 'messages',\n                controller: 'MessagesController',\n                url: '/messages',\n                templateUrl: 'views/messages.html'\n              })\n              .state('users',{\n                name: 'users',\n                controller: 'UsersController',\n                url: '/users',\n                templateUrl: 'views/users.html'\n              })\n              .state('report',{\n                name: 'report',\n                controller: 'ReportController',\n                url: '/report',\n                templateUrl: 'views/report.html'\n              });\n\n            $httpProvider.defaults.useXDomain = true;\n            delete $httpProvider.defaults.headers.common[\"X-Requeste    d-With\"];\n            $httpProvider.defaults.headers.common[\"Accept\"] = \"application/json\";\n            $httpProvider.defaults.headers.common[\"Content-Type\"] = \"application/json\";\n            $httpProvider.interceptors.push(['$q', 'MessagesService', 'alertify', '$rootScope', '$state', function ($q, MessagesService, alertify, $rootScope, $state) {\n                return {\n                    'responseError': function (response) {\n                        if(response.status === 400) {\n                            if(response.data.error == 'token_not_provided'){\n                                // $auth.logout().then(function () {\n                                    localStorage.removeItem('satellizer_token');\n                                    localStorage.removeItem('user');\n                                    $rootScope.authenticated = false;\n                                    $rootScope.currentUser = null;\n                                    response.data.error = 'Zaloguj się ponownie';\n                                    $state.go('nav.login');\n                                // });\n\n                                // AuthService.logout();\n                                // $http.defaults.headers.common.Authorization = '';\n                                // $state.go('nav.login');\n                            }\n                            MessagesService.showMessage(response.data);\n                        }\n                        if(response.status === 401) {\n                            if(response.data.error == 'invalid_credentials'){\n                                var msg = {\n                                    error: 'Podano błędny email lub hasło'\n                                };\n                                MessagesService.showMessage(msg);\n                                $state.go('nav.login');\n                            }\n                            console.error(\"Brak autoryzacji\");\n                            $state.go('nav.login');\n                        }\n\n                        return $q.reject(response);\n                    },\n\n                    response: function (response) {\n                        if(response.status === 200 && typeof response.data.success !== 'undefined') {\n                            MessagesService.messageSuccess(response.data);\n                        }\n                        return response;\n                    }\n\n\n                };\n            }]);\n\n\n        }\n    ]);","(function () {\n    'use strict';\n\n    angular\n        .module('application')\n        .directive(\"fileUploader\", [ '$rootScope', 'FileUploadService', function ($rootScope, FileUploadService) {\n        return {\n            scope: false,\n            link: function (scope, element) {\n                element.bind('change', function (evt) {\n                    scope.$apply(function () {\n                        if ( evt.target.files.length === 0 ) {\n                            return;\n                        }\n                        FileUploadService.uploadFile(evt.target.files[0])\n                            .then(function (response) {\n                                response = response.data;\n                                if ( response.success ) {\n                                    $rootScope.$broadcast('updateNotificationImage', {\n                                        image: response.url\n                                    });\n                                }\n                            });\n                    });\n                });\n            }\n        }\n    } ]);\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('application')\n        .controller('AddDetailsController', AddDetailsController);\n\n    function AddDetailsController($scope, $state, PageService, AddPageService, $rootScope) {\n        $scope.status = false;\n\n        $scope.addPage = AddPageService.status.addPage;\n        $scope.addPageStep = 1;\n        $rootScope.$broadcast('addPageStep', {\n            addPageStep: $scope.addPageStep\n        });\n\n        $scope.prooflyBranding = 1;\n\n        $scope.addPage = function () {\n            PageService.addPage({\n                name: $scope.namePage,\n                url: $scope.url,\n                utm_source: $scope.utmSource,\n                utm_medium: $scope.utmMedium,\n                proofly_branding: $scope.prooflyBranding,\n                verification: $scope.verification\n            })\n                .then(function(result) {\n                    AddPageService.setStep($scope.addPageStep);\n                    $rootScope.$broadcast('addPageStep', {\n                        addPageStep: AddPageService.status.addPageStep\n                    });\n                    $state.go('nav.addPage.installation', {\n                        pageId: result.data.page.id\n                    });\n                });\n        };\n\n    }\n}());","(function() {\n    'use strict';\n\n    angular\n        .module('application')\n        .controller('AddNotificationController', ['$scope', '$rootScope','$state', '$stateParams', 'goalsList', 'goalTypesList', 'NotificationService', 'AddPageService', AddNotificationController]);\n\n    function AddNotificationController($scope, $rootScope, $state, $stateParams,goalsList, goalTypesList, NotificationService, AddPageService) {\n        $scope.statusNotification = 'add';\n\n        $scope.addPage = AddPageService.status.addPage;\n        $scope.addPageStep = 3;\n        $rootScope.$broadcast('addPageStep', {\n            addPageStep: $scope.addPageStep\n        });\n\n        $scope.name = '';\n        $scope.goalId = null;\n        $scope.goalTypeId = null;\n        $scope.goalName = '';\n        $scope.pageUrl = '';\n        $scope.notificationContent = '';\n        $scope.notificationMock = '';\n        $scope.step = 1;\n        $scope.stepContentTab = 'content';\n        $scope.notificationImage = '';\n        $scope.goalsList = goalsList;\n        $scope.goalTypesList = goalTypesList;\n        $scope.pageId = $stateParams.pageId;\n\n        $rootScope.$on('updateNotificationImage', function(event, args) {\n            $scope.notificationImage = args.image || '';\n        });\n\n        $scope.stepComplition = [\n            { step: 1, variable: 'name', complete: false, visited: false, message: 'Podaj nazwę powiadomienia' },\n            { step: 2, variable: 'pageUrl', complete: false, visited: false },\n            { step: 3, variable: 'goalName', complete: false, visited: false, goalType: { complete: false, active: false } },\n            { step: 4, variable: 'notificationContent', complete: false, visited: false },\n            { step: 4, variable: 'variables', complete: true, visited: false, message: 'Wpisano niedozwolone zmienne w pole treść powiadomienia' },\n            { step: 4, variable: 'notificationImage', complete: false, visited: false }\n        ];\n\n        $scope.notificationContentVariables = [\n            { name: '$first_name$', mock: 'Adam' },\n            { name: '$city$', mock: 'Krakowa' },\n            { name: '$country$', mock: 'Polski' },\n            { name: '$title$', mock: 'Koszulkę' },\n            { name: '$title_link$', mock: 'http://example.pl' },\n            { name: '$time_ago$', mock: '5 minut temu' },\n            { name: '$count$', mock: '10' },\n            { name: '$view$', mock: '5' }\n        ];\n\n        $scope.variablesCount = {\n            status: false,\n            value: null\n        };\n\n        $scope.addNotification = function () {\n            var addNotificationData = {\n                page_id: $scope.pageId,\n                name: $scope.name,\n                page_url: $scope.pageUrl,\n                goal_id: $scope.goalId,\n                goal_type_id: $scope.goalTypeId,\n                content: $scope.notificationMock,\n                count_variable: $scope.variablesCount.value\n            };\n            if ( $scope.notificationImage !== '' ) {\n                addNotificationData.image = $scope.notificationImage;\n            }\n            NotificationService.addNotification(addNotificationData)\n                .then(function(result) {\n                    AddPageService.status.addPage = false;\n                    $scope.stepComplition[4].complete = true;\n                    $state.go('nav.pageSettings.notifications',{pageId: $scope.pageId});\n                },function(error){\n                  if(error.data.type === 'name') {\n                    $scope.stepComplition[0].message= error.data.message;\n                    $scope.stepComplition[0].complete= false;\n                  } else if (error.data.type === 'variables') {\n                    $scope.stepComplition[4].message= error.data.message;\n                    $scope.stepComplition[4].complete = false;\n                  }\n                });\n        };\n\n        $scope.next = function () {\n            event.stopPropagation();\n            $scope.stepComplition[$scope.step].visited = true;\n            var stepIndex = $scope.step - 1;\n            if ( $scope.stepComplition[stepIndex] ) {\n                $scope.stepComplition[stepIndex].complete = $scope[$scope.stepComplition[stepIndex].variable] !== '';\n                if($scope[$scope.stepComplition[stepIndex].variable] === '') {\n                    $scope.stepComplition[stepIndex].message = '';\n                }\n                if($scope.stepComplition[2].goalType.active && !$scope.stepComplition[2].goalType.complete) {\n                    $scope.stepComplition[2].complete = false;\n                }\n            }\n            $scope.stepComplition[stepIndex].visited = true;\n            $scope.step= ++$scope.step;\n        };\n\n        $scope.chooseGoal = function (event, goal) {\n            $scope.goalName = goal.name;\n            $scope.goalId = goal.id;\n            $scope.goalTypeId = goal.type_id;\n\n            if($scope.goalId === 4) {\n                $scope.stepComplition[2].goalType.active = true;\n                $scope.stepComplition[2].complete = false;\n                $scope.goalVariables = '';\n            } else {\n                $scope.stepComplition[2].goalType.active = false;\n                $scope.stepComplition[2].goalType.complete = false;\n                var variables = '';\n                goalTypesList.forEach(function(value){\n                    if(value.id === goal.type_id) {\n                        $scope.goalTypeName = value.name;\n                        variables = value.variables;\n                    }\n                });\n                var result = variables.split(\", \");\n                $scope.goalVariables = result;\n            }\n        };\n\n        $scope.chooseGoalType = function (event, goalType) {\n            $scope.stepComplition[2].complete = true;\n            $scope.stepComplition[2].goalType.complete = true;\n            $scope.goalName = goalType.name;\n            $scope.goalTypeId = goalType.id;\n            var variables = goalType.variables;\n            var result = variables.split(\", \");\n            $scope.goalVariables = result;\n        };\n\n        $scope.setStep = function (step) {\n            if(step === 5) {\n                for (var key in $scope.stepComplition) {\n                    $scope.stepComplition[key].visited = true;\n                }\n            }\n            var currentStep = $scope.step-1;\n            $scope.stepComplition[currentStep].visited = true;\n            if ($scope.stepComplition[currentStep]) {\n                $scope.stepComplition[currentStep].complete = $scope[$scope.stepComplition[currentStep].variable] !== '';\n              if($scope[$scope.stepComplition[currentStep].variable] === '') {\n                $scope.stepComplition[currentStep].message = '';\n              }\n                if($scope.stepComplition[2].goalType.active && !$scope.stepComplition[2].goalType.complete) {\n                    $scope.stepComplition[2].complete = false;\n                }\n            }\n            $scope.step = step;\n        };\n\n        $scope.$watch(function () {\n            return $scope.notificationMock;\n        }, function (mock) {\n            var res = mock.match(/\\$count\\$/g);\n            if(res != null) {\n                $scope.variablesCount.status = true;\n             } else {\n                $scope.variablesCount.status = false;\n            }\n\n            $scope.notificationContentVariables.forEach(function(variable) {\n                mock = mock.split(variable.name).join(variable.mock);\n            });\n            $scope.notificationContent = mock;\n        });\n\n    }\n}());","(function() {\n    'use strict';\n\n    angular\n        .module('application')\n        .controller('AddPageController', AddPageController);\n\n    function AddPageController($scope, $state, AddPageService, PageService, pagesList) {\n        $scope.status = false;\n\n        $scope.addPage = AddPageService.setStatus(true);\n        $scope.addPageStep = AddPageService.status.addPageStep;\n        $scope.pagesList = pagesList;\n\n        $scope.$on('addPageStep', function(event, args) {\n            $scope.addPageStep = args.addPageStep;\n            console.log($scope.addPageStep);\n        });\n\n        $scope.$on('pagesListUpdated', function(event, args) {\n            $scope.pagesList = args.pagesList;\n        });\n\n    }\n}());","(function() {\n    'use strict';\n\n    angular\n        .module('application')\n        .controller('AppController', AppController);\n\n    function AppController($window, $rootScope) {\n\n        if ($window.localStorage.getItem('user')) {\n            var user = $window.localStorage.getItem('user');\n            $rootScope.authenticated = true;\n            $rootScope.currentUser = JSON.parse(user);\n        }\n    }\n}());","(function() {\n    'use strict';\n\n    angular\n        .module('application')\n        .controller('AuthenticationController', AuthenticationController);\n\n    function AuthenticationController($scope, $state, $auth, $http, $rootScope, $window, MessagesService) {\n        $scope.email = '';\n        $scope.password = '';\n        $scope.loginError = false;\n        $scope.loginErrorText = '';\n\n        $scope.login = function () {\n            var credentials = {\n                email: $scope.email,\n                password: $scope.password\n            };\n\n            $auth.login(credentials).then(function(data){\n                return $http.get('api/authenticate/user');\n            }, function(error){\n                if(error.status === 401){\n                    var loginErrorText = 'Podano niewłaściwy mail lub hasło';\n                    // $scope.loginError = true;\n                    // $scope.loginErrorText = 'Podano niewłaściwy mail lub hasło';\n                    MessagesService.showMessage('message', loginErrorText);\n                }\n            }).then(function(response){\n                var user = JSON.stringify(response.data.user);\n                $window.localStorage.setItem('user', user);\n                $rootScope.authenticated = true;\n                $rootScope.currentUser = response.data.user;\n                if($window.localStorage.getItem('showWelcome')) {\n                    $window.localStorage.removeItem('showWelcome');\n                    $state.go('nav.welcome');\n                } else {\n                    $state.go('nav.main');\n                }\n            });\n\n        }\n\n    }\n}());","(function() {\n    'use strict';\n\n    angular\n        .module('application')\n        .controller('DetailsController', DetailsController);\n\n    function DetailsController($scope, $state, page, PageService, $rootScope) {\n        $scope.pageId = page.id;\n        $scope.namePage = page.name;\n        $scope.url = page.url;\n        $scope.utmSource = page.utm_source;\n        $scope.utmMedium = page.utm_medium;\n        $scope.status = page.status;\n        $scope.prooflyBranding = page.proofly_branding;\n        $scope.verification = page.verification;\n\n        $scope.editPage = function () {\n            PageService.editPage({\n                id: $scope.pageId,\n                name: $scope.namePage,\n                url: $scope.url,\n                utm_source: $scope.utmSource,\n                utm_medium: $scope.utmMedium,\n                status: $scope.status,\n                proofly_branding: $scope.prooflyBranding,\n                verification: $scope.verification\n            })\n                .then(function(result) {\n                    PageService.showPage(result.data.page.  user_id).then(function(response){\n                        $rootScope.$broadcast('pagesListUpdated', { pagesList: response.data.pages });\n                        $state.go('nav.main');\n                    });\n                });\n        };\n    }\n}());","(function() {\n    'use strict';\n\n    angular\n        .module('application')\n        .controller('EditNotificationController', ['$scope', '$state', 'notification', 'goalsList', 'goalTypesList', '$rootScope', 'NotificationService', EditNotificationController]);\n\n    function EditNotificationController($scope, $state, notification, goalsList, goalTypesList, $rootScope, NotificationService) {\n        $scope.statusNotification = 'edit';\n\n        $scope.pageId = notification.page_id;\n\n        $scope.notificationId = notification.id;\n        $scope.notificationImage = notification.image || '';\n        $scope.name = notification.name;\n        $scope.pageUrl = notification.page_url;\n        $scope.goalId = notification.goal_id;\n        $scope.goalTypeId = notification.goal_type_id;\n        $scope.goalVariables = '';\n        $.each(goalTypesList, function(key, value){\n            if(value.id === $scope.goalTypeId) {\n                var variables =value.variables;\n                var result = variables.split(\", \");\n                $scope.goalVariables = result;\n            }\n        });\n        $scope.notificationContent = notification.content;\n        $scope.notificationMock = notification.content;\n        $scope.step = 1;\n        $scope.stepContentTab = 'content';\n        $scope.goalsList = goalsList;\n        $scope.goalTypesList = goalTypesList;\n\n        $rootScope.$on('updateNotificationImage', function(event, args) {\n            $scope.notificationImage = args.image || '';\n        });\n\n        $scope.stepComplition = [\n            { step: 1, variable: 'name', complete: true, visited: false, message: 'Podaj nazwę powiadomienia' },\n            { step: 2, variable: 'pageUrl', complete: true, visited: false },\n            { step: 3, variable: 'goalName', complete: true, visited: false, goalType: { complete: false, active: false } },\n            { step: 4, variable: 'notificationContent', complete: true, visited: false },\n            { step: 4, variable: 'variables', complete: true, visited: false, message: 'Wpisano niedozwolone zmienne w pole treść powiadomienia' },\n            { step: 4, variable: 'notificationImage', complete: false, visited: false }\n        ];\n\n        if($scope.goalId === 4) {\n            $scope.stepComplition[2].goalType.active = true;\n            $scope.stepComplition[2].goalType.complete = true;\n        }\n\n        $scope.notificationContentVariables = [\n            { name: '$first_name$', mock: 'Adam' },\n            { name: '$city$', mock: 'Krakowa' },\n            { name: '$country$', mock: 'Polski' },\n            { name: '$title$', mock: 'Koszulkę' },\n            { name: '$title_link$', mock: 'http://example.pl' },\n            { name: '$time_ago$', mock: '5 minut temu' },\n            { name: '$count$', mock: '10' },\n            { name: '$view$', mock: '5' }\n        ];\n\n\n        var variableCount = null;\n        if(notification.count_variable !== null) {\n          variableCount = '$' + notification.count_variable + '$';\n        } else {\n          variableCount = '';\n        }\n\n        $scope.variablesCount = {\n            status: false,\n            value: variableCount\n        };\n\n        $scope.editNotification = function () {\n            var editNotificationData = {\n                id: $scope.notificationId,\n                name: $scope.name,\n                page_url: $scope.pageUrl,\n                goal_id: $scope.goalId,\n                goal_type_id: $scope.goalTypeId,\n                content: $scope.notificationMock,\n                count_variable: $scope.variablesCount.value\n            };\n            if ( $scope.notificationImage !== '' ) {\n                editNotificationData.image = $scope.notificationImage;\n            }\n            NotificationService.editNotification(editNotificationData)\n                .then(function(result) {\n                    $scope.stepComplition[4].complete = true;\n                    $state.go('nav.pageSettings.notifications',{pageId: $scope.pageId});\n                }, function(error){\n                    if(error.data.type === 'name') {\n                      $scope.stepComplition[0].message= error.data.message;\n                      $scope.stepComplition[0].complete= false;\n                    } else if (error.data.type === 'variables') {\n                      $scope.stepComplition[4].message= error.data.message;\n                      $scope.stepComplition[4].complete = false;\n                    }\n                });\n        };\n\n        $scope.next = function () {\n            event.stopPropagation();\n            $scope.stepComplition[$scope.step].visited = true;\n            var stepIndex = $scope.step - 1;\n            if ( $scope.stepComplition[stepIndex] ) {\n                $scope.stepComplition[stepIndex].complete = $scope[$scope.stepComplition[stepIndex].variable] !== '';\n                if($scope[$scope.stepComplition[stepIndex].variable] === '') {\n                  $scope.stepComplition[stepIndex].message = '';\n                }\n                if($scope.stepComplition[2].goalType.active && !$scope.stepComplition[2].goalType.complete) {\n                    $scope.stepComplition[2].complete = false;\n                }\n            }\n            $scope.stepComplition[stepIndex].visited = true;\n            $scope.step= ++$scope.step;\n        };\n\n        $scope.chooseGoal = function (event, goal) {\n            $scope.goalName = goal.name;\n            $scope.goalId = goal.id;\n            $scope.goalTypeId = goal.type_id;\n\n            if($scope.goalId === 4) {\n                $scope.stepComplition[2].goalType.active = true;\n                $scope.stepComplition[2].complete = false;\n                $scope.goalVariables = '';\n            } else {\n                $scope.stepComplition[2].goalType.active = false;\n                $scope.stepComplition[2].goalType.complete = false;\n                var variables = '';\n                goalTypesList.forEach(function(value){\n                    if(value.id === goal.type_id) {\n                        $scope.goalTypeName = value.name;\n                        variables = value.variables;\n                    }\n                });\n                var result = variables.split(\", \");\n                $scope.goalVariables = result;\n            }\n        };\n\n        $scope.chooseGoalType = function (event, goalType) {\n            $scope.stepComplition[2].complete = true;\n            $scope.stepComplition[2].goalType.complete = true;\n            $scope.goalName = goalType.name;\n            $scope.goalTypeId = goalType.id;\n            var variables = goalType.variables;\n            var result = variables.split(\", \");\n            $scope.goalVariables = result;\n        };\n\n        $scope.setStep = function (step) {\n            if(step === 5) {\n                for (var key in $scope.stepComplition) {\n                    $scope.stepComplition[key].visited = true;\n                }\n            }\n            var currentStep = $scope.step-1;\n            $scope.stepComplition[currentStep].visited = true;\n            if ($scope.stepComplition[currentStep]) {\n                $scope.stepComplition[currentStep].complete = $scope[$scope.stepComplition[currentStep].variable] !== '';\n                if($scope[$scope.stepComplition[currentStep].variable] === '') {\n                  $scope.stepComplition[currentStep].message = '';\n                }\n                if($scope.stepComplition[2].goalType.active && !$scope.stepComplition[2].goalType.complete) {\n                    $scope.stepComplition[2].complete = false;\n                }\n            }\n            $scope.step = step;\n        };\n\n        $scope.$watch(function () {\n            return $scope.notificationMock;\n        }, function (mock) {\n            var res = mock.match(/\\$count\\$/g);\n            if(res != null) {\n                $scope.variablesCount.status = true;\n            } else {\n                $scope.variablesCount.status = false;\n            }\n            $scope.notificationContentVariables.forEach(function(variable) {\n                mock = mock.split(variable.name).join(variable.mock);\n            });\n            $scope.notificationContent = mock;\n        });\n\n    }\n}());","(function() {\n    'use strict';\n\n    angular\n        .module('application')\n        .controller('InstallationController', InstallationController);\n\n    function InstallationController($scope, $stateParams, page, AddPageService, $state, $rootScope) {\n        $scope.pageId = $stateParams.pageId;\n        $scope.pageApi = page.api_key;\n\n        $scope.addPage = AddPageService.status.addPage;\n        $scope.addPageStep = 2;\n        $rootScope.$broadcast('addPageStep', {\n            addPageStep: $scope.addPageStep\n        });\n\n\n        $scope.next = function () {\n            AddPageService.setStep($scope.addPageStep);\n            $rootScope.$broadcast('addPageStep', {\n                addPageStep: AddPageService.status.addPageStep\n            });\n            AddPageService.status.addPage = true;\n            $state.go('nav.addPage.notification', {\n                pageId: $scope.pageId\n            });\n        };\n\n    }\n}());","(function() {\n    'use strict';\n\n    angular\n        .module('application')\n        .controller('MainController', ['$scope', 'pagesList', 'PageService', '$rootScope', MainController]);\n\n    function MainController($scope, pagesList, PageService, $rootScope) {\n\n        $scope.pagesList = pagesList;\n\n        $scope.setStatus = function (pageId, status) {\n            PageService.editPage({\n                id: pageId,\n                status: status\n            })\n                .then(function(result) {\n                });\n        };\n\n        $scope.deletePage = function (pageId) {\n            PageService.deletePage(pageId).then(function(result) {\n                for (var i = 0; i < pagesList.length; i++) {\n                    if(pagesList[i].id == pageId){\n                        pagesList.splice(i, 1);\n                        $scope.pagesList = pagesList;\n                    }\n                }\n                $rootScope.$broadcast('pagesListUpdated', { pagesList: $scope.pagesList });\n            });\n        };\n\n    }\n}());","(function() {\n    'use strict';\n\n    angular\n        .module('application')\n        .controller('NavController', ['$scope', NavController]);\n\n    function NavController($scope) {\n\n\n        //zaimportuj pagesList\n        // $scope.pagesList = pagesList;\n\n        // $scope.$on('pagesListUpdated', function(event, args) {\n        //     $scope.pagesList = args.pagesList;\n        // });\n\n    }\n}());","(function() {\n    'use strict';\n\n    angular\n        .module('application')\n        .controller('NotificationsController', ['$scope', '$stateParams', 'notificationsList', 'NotificationService', NotificationsController]);\n\n    function NotificationsController($scope, $stateParams, notificationsList, NotificationService) {\n\n        $scope.notificationsList = notificationsList;\n        $scope.pageId = $stateParams.pageId;\n\n        $scope.setStatus = function (notificationId, status) {\n            NotificationService.editNotification({\n                id: notificationId,\n                active: status\n            })\n                .then(function(result) {\n                });\n        };\n\n        $scope.deleteNotification = function (notificationId) {\n            NotificationService.deleteNotification(notificationId).then(function(result) {\n                for (var i = 0; i < notificationsList.length; i++) {\n                    if(notificationsList[i].id == notificationId){\n                        notificationsList.splice(i, 1);\n                        $scope.notificationsList = notificationsList;\n                    }\n                }\n            });\n        };\n\n    }\n}());","(function() {\n    'use strict';\n\n    angular\n        .module('application')\n        .controller('PageSettingsController', PageSettingsController);\n\n    function PageSettingsController($scope, $window, $timeout, pagesList, $stateParams, AddPageService) {\n        $scope.pagesList = pagesList;\n        $scope.pageId = $stateParams.pageId;\n        $scope.addPage = AddPageService.setStatus(false);\n\n        $timeout(function() {\n            var currentState = $window.location.hash;\n            var tabOfCurrentState = currentState.split(\"/\");\n            var index = tabOfCurrentState.indexOf('pageSettings');\n            var active = tabOfCurrentState[index+1];\n            $scope.active = active;\n        }, 100);\n\n        $scope.setActive = function (name) {\n            $scope.active = name;\n        };\n\n    }\n}());","(function() {\n    'use strict';\n\n    angular\n        .module('application')\n        .controller('ProfileController', ProfileController);\n\n    function ProfileController($scope, $window, $rootScope, AuthService) {\n        var user = $rootScope.currentUser;\n        $scope.userId = user.id;\n        $scope.email = user.email;\n        $scope.name = user.name;\n        $scope.telephone = user.telephone;\n\n        $scope.settingsAccount = function () {\n            AuthService.settingsAccount({\n                email: $scope.email,\n                previousPassword: $scope.previousPassword,\n                password: $scope.password,\n                password_confirmation: $scope.passwordConfirmation,\n                name: $scope.name,\n                telephone: $scope.telephone\n            })\n                .then(function(result) {\n                    var user = JSON.stringify(result.data.user);\n                    $window.localStorage.setItem('user', user);\n                    $rootScope.currentUser = result.data.user;\n                });\n        };\n\n    }\n}());","(function() {\n    'use strict';\n\n    angular\n        .module('application')\n        .controller('RegisterController', RegisterController);\n\n    function RegisterController($scope, $state, $stateParams, RegisterService, $window) {\n        $scope.email = '';\n        $scope.url = '';\n        $scope.name = '';\n        $scope.telephone = '';\n        $scope.confirmation_code = $stateParams.confirmation_code;\n        $scope.emailparam = $stateParams.email;\n\n        if(RegisterService.message && RegisterService.message.status ){\n            $scope.message = RegisterService.message.content;\n        }\n\n        $scope.registerStepOne = function () {\n            RegisterService.registerStepOne($scope.email).then(function(result) {\n                $state.go('nav.register-second');\n            });\n        };\n\n        $scope.registerStepSecond = function () {\n            RegisterService.registerStepSecond({\n                namePage: $scope.namePage,\n                name: $scope.name,\n                url: $scope.url,\n                telephone: $scope.telephone\n            })\n                .then(function(result) {\n                $state.go('nav.login');\n                });\n        };\n\n        $scope.registerStepThird = function () {\n            RegisterService.registerStepThird({\n                password: $scope.password,\n                password_confirmation: $scope.password_confirmation,\n                email: $scope.emailparam\n            })\n                .then(function(result) {\n                $window.localStorage.setItem('showWelcome', true);\n                $state.go('nav.login');\n                });\n        };\n    }\n}());","(function() {\n    'use strict';\n\n    angular\n        .module('application')\n        .controller('RemindPasswordController', RemindPasswordController);\n\n    function RemindPasswordController($scope, $state, AuthService) {\n        $scope.email = '';\n\n        $scope.remindPassword = function () {\n            AuthService.remindPassword($scope.email).then(function(result) {\n                $state.go('register');\n            });\n        };\n\n\n    }\n}());","(function() {\n    'use strict';\n\n    angular\n        .module('application')\n        .controller('ResetPasswordController', ResetPasswordController);\n\n    function ResetPasswordController($scope, $stateParams, $state,AuthService) {\n        $scope.tokenParam = $stateParams.token;\n        $scope.email = '';\n        $scope.password = '';\n        $scope.passwordConfirmation = '';\n\n        $scope.resetPassword = function () {\n            AuthService.resetPassword({\n                token: $scope.tokenParam,\n                email: $scope.email,\n                password: $scope.password,\n                password_confirmation: $scope.passwordConfirmation\n            })\n                .then(function(result) {\n                    $state.go('nav.login');\n                });\n        };\n\n\n    }\n}());","(function() {\n    'use strict';\n\n    angular\n        .module('application')\n        .controller('SettingsController', SettingsController);\n\n    function SettingsController($scope, $stateParams, SettingService, setting) {\n        $scope.pageId = $stateParams.pageId;\n\n        $scope.statusEdit = true;\n        $scope.randomDisplay = false;\n        $scope.notificationLoop = false;\n        $scope.hideMobile = false;\n        $scope.randomDelays = false;\n        $scope.openNewCard = false;\n        $scope.firstDisplay = '';\n        $scope.maxDisplays = '';\n        $scope.timeDisplay = '';\n        $scope.delays = '';\n        $scope.ipAddress = '';\n\n        if(setting === null) {\n            $scope.statusEdit = false;\n        } else {\n            $scope.statusEdit = true;\n            $scope.randomDisplay = setting.random_display;\n            $scope.notificationLoop = setting.notification_loop;\n            $scope.hideMobile = setting.hide_mobile;\n            $scope.randomDelays = setting.random_delays;\n            $scope.openNewCard = setting.open_new_card;\n            $scope.firstDisplay = setting.first_display;\n            $scope.maxDisplays = setting.max_displays;\n            $scope.timeDisplay = setting.time_display;\n            $scope.delays = setting.delays;\n            $scope.ipAddress = setting.ip_address;\n        }\n\n        $scope.addSetting = function () {\n            SettingService.addSetting({\n                page_id: $scope.pageId,\n                random_display: $scope.randomDisplay,\n                notification_loop: $scope.notificationLoop,\n                hide_mobile: $scope.hideMobile,\n                random_delays: $scope.randomDelays,\n                open_new_card: $scope.openNewCard,\n                first_display: $scope.firstDisplay,\n                max_displays: $scope.maxDisplays,\n                time_display: $scope.timeDisplay,\n                delays: $scope.delays,\n                ip_address: $scope.ipAddress\n            })\n                .then(function(result) {\n                });\n        };\n\n        $scope.editSetting = function () {\n          SettingService.editSetting({\n            page_id: $scope.pageId,\n            random_display: $scope.randomDisplay,\n            notification_loop: $scope.notificationLoop,\n            hide_mobile: $scope.hideMobile,\n            random_delays: $scope.randomDelays,\n            open_new_card: $scope.openNewCard,\n            first_display: $scope.firstDisplay,\n            max_displays: $scope.maxDisplays,\n            time_display: $scope.timeDisplay,\n            delays: $scope.delays,\n            ip_address: $scope.ipAddress\n          })\n            .then(function(result) {\n            });\n        };\n\n    }\n}());","(function() {\n    'use strict';\n\n    angular\n        .module('application')\n        .controller('UserController', UserController);\n\n    function UserController($scope, $auth, $rootScope, $state) {\n\n        $scope.logout = function() {\n            $auth.logout().then(function() {\n                localStorage.removeItem('user');\n                $rootScope.authenticated = false;\n                $rootScope.currentUser = null;\n                $state.go('nav.login');\n            });\n        }\n\n    }\n}());\n","(function() {\n    'use strict';\n\n    angular\n        .module('application')\n        .controller('WelcomeController', ['$scope', 'page', WelcomeController]);\n\n    function WelcomeController($scope, page) {\n        $scope.pageId = page.id;\n    }\n}());","(function() {\n    'use strict';\n\n    angular\n        .module('application')\n        .service('AddPageService', AddPageService);\n\n    function AddPageService() {\n        var self = this;\n\n        self.status = {\n            addPage: false,\n            addPageStep: 1\n        };\n\n        self.setStatus = function (status) {\n            self.status.addPage = status;\n            return self.status.addPage;\n        };\n\n        self.setStep = function (step) {\n            self.status.addPageStep = step+1;\n            return self.status.addPageStep;\n        };\n\n    }\n}());","(function() {\n    'use strict';\n\n    angular\n        .module('application')\n        .service('AuthService', AuthService);\n\n    function AuthService($http) {\n        var self = this;\n\n        self.remindPassword = function (email) {\n            return $http({\n                method: 'POST',\n                url: 'api/password/email',\n                data: {\n                    email: email\n                }\n            });\n        };\n\n        self.resetPassword = function (credentials) {\n            return $http({\n                method: 'POST',\n                url: 'api/password/reset',\n                data: credentials\n            });\n        };\n\n        self.settingsAccount = function (data) {\n            return $http({\n                method: 'POST',\n                url: 'api/user/settingsAccount',\n                data: data\n            });\n        };\n\n    }\n}());","(function() {\n    'use strict';\n\n    angular\n        .module('application')\n        .service('FileUploadService', AuthService);\n\n    function AuthService($http) {\n        var self = this;\n\n        self.uploadFile = function (file) {\n            var updateData = new FormData();\n            updateData.append('file', file);\n\n            return $http({\n                method: 'POST',\n                data: updateData,\n                url: '/api/upload',\n                headers: {'Content-Type': undefined }\n            });\n        };\n    }\n}());","(function() {\n    'use strict';\n\n    angular\n        .module('application')\n        .service('GoalService', GoalService);\n\n    function GoalService($http) {\n        var self = this;\n\n        self.getGoals = function () {\n            return $http({\n                method: 'GET',\n                url: 'api/goals/'\n            });\n        };\n\n        self.getGoalTypes = function () {\n            return $http({\n                method: 'GET',\n                url: 'api/goalTypes/'\n            });\n        };\n\n    }\n}());","(function() {\n    'use strict';\n\n    angular\n        .module('application')\n        .service('MessagesService', MessagesService);\n\n    function MessagesService(alertify) {\n\n        var self = this;\n\n        self.showMessage = function (response) {\n            var msgResponse = '';\n            var message = '';\n            if(typeof response.validatorError !== 'undefined') {\n                msgResponse = response.validatorError;\n                Object.keys(msgResponse).forEach(function(key) {\n                    message = message + msgResponse[key][0] + \"</br>\";\n                });\n                alertify\n                    .maxLogItems(1)\n                    .error(message);\n            } else if (typeof response.error !== 'undefined') {\n                msgResponse = response.error;\n                alertify\n                    .maxLogItems(1)\n                    .error(msgResponse);\n            }\n        };\n\n        self.messageSuccess = function (response) {\n            var msgSuccess = response.success;\n            alertify\n                .maxLogItems(1)\n                .success(msgSuccess);\n        };\n\n    }\n}());","(function() {\n    'use strict';\n\n    angular\n        .module('application')\n        .service('NotificationService', NotificationService);\n\n    function NotificationService($http) {\n        var self = this;\n\n        self.addNotification = function (notification) {\n            return $http({\n                method: 'POST',\n                url: 'api/notifications',\n                data: notification\n            });\n        };\n\n        self.editNotification = function (notification) {\n            return $http({\n                method: 'PUT',\n                url: 'api/notifications/'+notification.id,\n                data: notification\n            });\n        };\n\n        self.getNotifications = function (pageId) {\n            return $http({\n                method: 'GET',\n                url: 'api/notifications/'+pageId\n            });\n        };\n\n        self.getNotificationById = function (id) {\n            return $http({\n                method: 'GET',\n                url: 'api/notification/'+id\n            });\n        };\n\n        self.deleteNotification = function (notificationId) {\n            return $http({\n                method: 'DELETE',\n                url: 'api/notifications/'+notificationId\n            });\n        };\n\n    }\n}());","(function() {\n    'use strict';\n\n    angular\n        .module('application')\n        .service('PageService', PageService);\n\n    function PageService($http) {\n        var self = this;\n\n        self.step1data = {};\n        self.message = {\n            status: '',\n            message: ''\n        };\n\n\n        self.showPage = function (id) {\n            return $http({\n                method: 'GET',\n                url: 'api/pages/'+id\n            });\n        };\n\n        self.getPageById = function (id) {\n            return $http({\n                method: 'GET',\n                url: 'api/page/'+id\n            });\n        };\n\n        self.getPageByUserId = function (userId) {\n            return $http({\n                method: 'GET',\n                url: 'api/page/user/'+userId\n            });\n        };\n\n        self.editPage = function (page) {\n            return $http({\n                method: 'PUT',\n                url: 'api/pages/'+page.id,\n                data: page\n            });\n        };\n\n        self.addPage = function (page) {\n            return $http({\n                method: 'POST',\n                url: 'api/pages',\n                data: page\n            });\n        };\n\n        self.deletePage = function (pageId) {\n            return $http({\n                method: 'DELETE',\n                url: 'api/pages/'+pageId\n            });\n        };\n\n    }\n}());","(function() {\n    'use strict';\n\n    angular\n        .module('application')\n        .service('RegisterService', RegisterService);\n\n    function RegisterService($http) {\n        var self = this;\n\n        self.step1data = {};\n        self.message = {\n            status: '',\n            message: ''\n        };\n\n        self.registerStepOne = function (email) {\n            self.step1data = {\n                email: email\n            };\n            return $http({\n                method: 'POST',\n                url: 'api/user/signup/part/first',\n                data: {\n                    email: email\n                }\n            });\n        };\n\n        self.registerStepSecond = function (data) {\n            data.email = self.step1data.email;\n            return $http({\n                method: 'POST',\n                url: 'api/user/signup/part/second',\n                data: data\n            });\n        };\n\n        self.registerConfirmation = function (token) {\n            return $http({\n                method: 'POST',\n                url: '/api/user/confirmation/'+token,\n            });\n        };\n\n        self.registerStepThird = function (data) {\n            return $http({\n                method: 'POST',\n                url: 'api/user/signup/part/third',\n                data: data\n            });\n        };\n\n\n    }\n}());","(function() {\n    'use strict';\n\n    angular\n        .module('application')\n        .service('SettingService', SettingService);\n\n    function SettingService($http) {\n        var self = this;\n\n        self.getSettingByPageId = function (id) {\n            return $http({\n                method: 'GET',\n                url: 'api/settings/'+id\n            });\n        };\n\n        self.addSetting = function (setting) {\n            return $http({\n                method: 'POST',\n                url: 'api/settings/',\n                data: setting\n            });\n        };\n\n        self.editSetting = function (setting) {\n            return $http({\n                method: 'PUT',\n                url: 'api/settings/'+setting.page_id,\n                data: setting\n            });\n        };\n\n    }\n}());"]}